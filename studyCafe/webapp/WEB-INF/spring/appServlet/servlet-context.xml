<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<aop:aspectj-autoproxy /> 

	<!-- handler! @requestMapping은 /hello 경로 만 처리해서 html, css, JS등을 처리하려면 handler가 필요!   -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/src/main/resources" />

	<!-- Resolves views selected for rendering by @Controllers ->  .jsp resources in the /WEB-INF/views directory -->
	<!-- Controller에서 return hello로 했으면, resolver는 hello.jsp를 views 폴더 안에서 찾게 된 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	
	
	<context:component-scan base-package="com.studycafe.controller" />
	<context:component-scan base-package="com.studycafe.aop" />
	
	
	
	<beans:bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<beans:property name="url" value="jdbc:oracle:thin:@210.16.214.202:1521:xe" />
		<beans:property name="username" value="minute" />
		<beans:property name="password" value="hot" />			
	</beans:bean>
	
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>




	<!-- 트렌젝션 메니저 - 패스워드 바꿀때 중간에 에러 생기면 롤백 -->
	<tx:advice id="txAdvice2" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*Tx3"/>
		</tx:attributes>
	</tx:advice>	
	
	
	<aop:config>
		<aop:pointcut id="txPointcut" 
			expression="within(*..*Controller)" />
		<aop:advisor advice-ref="txAdvice2" 
			pointcut-ref="txPointcut"/>
		<!-- //직접 Advice 클래스를 만들어서 사용
		<aop:aspect id="txAspect" ref="txAdvice">
			<aop:pointcut id="txPointcut" 
				expression="execution(* *..*.*Tx3(..))" />
			<aop:around pointcut-ref="txPointcut" method="doInTransaction" />
		</aop:aspect>
		-->
	</aop:config>
	
	<interceptors>
		<interceptor>
			<mapping path="/**" />
			<exclude-mapping path="/resources/**" />
			<beans:bean class="com.studycafe.interceptor.AuthInterceptor" />
		</interceptor>
	</interceptors>

</beans:beans>








